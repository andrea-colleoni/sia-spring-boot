<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

<!--     <import resource="app-config.xml"/> -->

	<bean id="reader"
		class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step" lazy-init="default">
		<property name="resource" value="file:./out/#{jobParameters['targetFileName']}"></property>
		<property name="lineMapper">
			<bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="PRODUCT_ID,NAME,DESCRIPTION,PRICE"></property>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="corso.batch.etl.ProdottoFieldSetMapper">
					</bean>
				</property>
			</bean>
		</property>
		<property name="linesToSkip" value="1"></property>
	</bean>

	<bean id="writer" class="corso.batch.etl.ProductJdbcItemWriter">
<!-- 		<property name="jdbcTemplate" ref="jdbcTemplate"></property> -->
	</bean>
	
	<bean id="decompressionTasklet"
		class="corso.batch.etl.DecompressionTasklet"
		scope="step">
		<property name="inputResource" value="file:#{jobParameters['inputResource']}"></property>
		<property name="targertDir" value="./out"></property>
		<property name="targetFileName" value="#{jobParameters['targetFileName']}"></property>
	</bean>

	<batch:job id="importProdotti" restartable="true">
		<batch:step id="decompress" next="readWriteProdotti">
			<batch:tasklet ref="decompressionTasklet">
			</batch:tasklet>
		</batch:step>
		<batch:step id="readWriteProdotti">
			<batch:tasklet>
				<batch:chunk reader="reader" writer="writer"
					commit-interval="100" skip-limit="2">
					<batch:skippable-exception-classes>
						<batch:include class="org.springframework.batch.item.file.FlatFileParseException" />
					</batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	
<!-- 	<bean  class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"> -->
<!-- 		<property name="transactionManager" ref="transactionManager"></property> -->
<!-- 	</bean> -->
	
	<batch:job-repository id="jobRepository"
		data-source="datasource" 
		transaction-manager="transactionManager" />
		
	<jdbc:initialize-database data-source="datasource"
		ignore-failures="ALL">
<!-- 		<jdbc:script location="org/springframework/batch/core/schema-drop-mysql.sql"/> -->
		<jdbc:script location="org/springframework/batch/core/schema-mysql.sql"/>
	</jdbc:initialize-database>

	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository"></property>
	</bean>
</beans>